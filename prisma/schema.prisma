// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

// Authentication models for NextAuth.js
model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

// Job models
enum JobType {
  PERMANENT
  TEMPORARY
  CONTRACT
}

enum JobStatus {
  ACTIVE
  DRAFT
  CLOSED
}

model Job {
  id           String        @id @default(cuid())
  title        String
  slug         String        @unique
  location     String
  description  String
  salary       String?
  salaryMin    Int?
  salaryMax    Int?
  type         JobType
  category     String
  status       JobStatus     @default(ACTIVE)
  featured     Boolean       @default(false)
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  expiresAt    DateTime?
  applications CVUpload[]
}

// CV Upload model
model CVUpload {
  id        String   @id @default(cuid())
  firstName String
  lastName  String
  email     String
  phone     String
  fileUrl   String
  fileName  String
  jobId     String?
  job       Job?     @relation(fields: [jobId], references: [id])
  message   String?
  createdAt DateTime @default(now())
}

// News/Blog model
model NewsArticle {
  id          String    @id @default(cuid())
  title       String
  slug        String    @unique
  excerpt     String
  content     String
  imageUrl    String?
  author      String
  published   Boolean   @default(false)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  publishedAt DateTime?
}

// Team member model
model TeamMember {
  id       String  @id @default(cuid())
  name     String
  role     String
  bio      String
  imageUrl String
  email    String
  order    Int     @default(0)
  active   Boolean @default(true)
}

// Contact form submissions
model ContactSubmission {
  id        String   @id @default(cuid())
  name      String
  email     String
  phone     String?
  company   String?
  message   String
  type      String
  createdAt DateTime @default(now())
}
